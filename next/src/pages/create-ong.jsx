import React, { useState } from "react";
import { useRouter } from "next/router";
import ButtonConnect from "../components/ButtonConnect";
import Box from "@mui/material/Box";
import Container from "@mui/material/Container";
import Typography from "@mui/material/Typography";
import TextField from "@mui/material/TextField";
import { imageAvailable } from "../utils/functions";
import { useAppContext } from "../context";
import Head from "next/head";
import MainLayout from "../layouts/MainLayout";
import Loader from "../components/Loader";

const CreateOng = () => {
  const { createOng } = useAppContext();
  const router = useRouter();
  const [formDetails, setFormDetails] = useState({
    name: "",
    description: "",
    image: "",
  });

  const [loading, setLoading] = useState(false);

  const handleFormChange = (type, e) => {
    setFormDetails({ ...formDetails, [type]: e.target.value });
  };

  const handleSubmit = async (e) => {
    e.preventDefault();

    imageAvailable(formDetails.image, async (isOk) => {
      if (isOk) {
        setLoading(true);
        await createOng({
          ...formDetails,
        });
        setLoading(false);
        router.push("/ongs");
      } else {
        alert("Image is not available");
        setFormDetails({ ...formDetails, image: "" });
      }
    });
  };

  return (
    <>
      <Head>
        <title>Create Ong</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <MainLayout>
        <Container
          sx={{
            bgcolor: "createCampBg.main",
            mb: "2rem",
            borderRadius: "15px",
            display: "flex",
            justifyContent: "center",
            alignItems: "center",
            flexDirection: "column",
            height: "100%",
            width: "48rem",
            pt: "2rem",
            pb: "2rem",
            flexWrap: "wrap",
            "@media(max-width: 1250px)": {
              width: "40rem",
            },
            "@media(max-width: 880px)": {
              width: "30rem",
              mt: "3rem",
            },
            "@media(max-width: 670px)": {
              width: "25rem",
            },
            "@media(max-width: 500px)": {
              width: "20rem",
              // mr: "1rem",
            },
            "@media(max-width: 350px)": {
              width: "17rem",
              // ml: "2rem",
              justifyContent: "center",
              alignItems: "center",
              // mr: "2rem",
            },
          }}
        >
          {/* <Container
            sx={{
              display: "flex",
              justifyContent: "space-between",
              alignItems: "center",
              flexDirection: "column",
            }}
          > */}
          <Box
            sx={{
              display: "flex",
              justifyContent: "center",
              alignItems: "center",
              flexDirection: "column",
            }}
          >
            {loading && <Loader />}
          </Box>
          <Box
            sx={{
              bgcolor: "textBg.main",
              height: "5rem",
              borderRadius: "15px",
              width: "20rem",
              display: "flex",
              justifyContent: "center",
              alignItems: "center",
              "@media(max-width: 880px)": {
                width: "15rem",
              },
              "@media(max-width: 670px)": {
                width: "13rem",
              },
              "@media(max-width: 500px)": {
                width: "10rem",
              },
            }}
          >
            <Typography
              variant="h4"
              align="center"
              sx={{
                fontWeight: "bold",
                fontSize: 25,
                "@media(max-width: 880px)": {
                  fontSize: 20,
                },
                "@media(max-width: 500px)": {
                  fontSize: 18,
                },
              }}
            >
              Create ONG
            </Typography>
          </Box>
          <Box
            sx={{
              width: "55%",
            }}
          >
            <form onSubmit={handleSubmit}>
              <Box
                sx={{
                  display: "flex",
                  justifyContent: "space-around",
                  alignItems: "center",
                  mt: "3rem",
                  flexDirection: "row",
                  width: "100%",
                  flexWrap: "wrap",
                  "@media(max-width: 500px)": {
                    mt: "1rem",
                  },
                }}
              >
                <TextField
                  required
                  label="ONG Name"
                  color="secondary"
                  sx={{ width: "100%" }}
                  value={formDetails.name}
                  onChange={(e) => handleFormChange("name", e)}
                />
              </Box>
              <Box
                sx={{
                  display: "flex",
                  justifyContent: "center",
                  alignItems: "center",
                  flexDirection: "row",
                  width: "100%",
                  flexWrap: "wrap",
                }}
              >
                <TextField
                  required
                  label="ONG Description"
                  multiline
                  rows={6}
                  sx={{
                    width: "100%",
                    mt: "2rem",
                  }}
                  color="secondary"
                  value={formDetails.description}
                  onChange={(e) => handleFormChange("description", e)}
                />
              </Box>
              <Box
                sx={{
                  mt: "2rem",
                  color: "secondary.main",
                  display: "flex",
                  justifyContent: "center",
                  "@media(max-width: 500px)": {
                    mt: "1rem",
                  },
                }}
              >
                <TextField
                  id="imgUrl"
                  type="url"
                  label="Image URL *"
                  sx={{
                    width: "100%",
                  }}
                  color="secondary"
                  value={formDetails.image}
                  onChange={(e) => handleFormChange("image", e)}
                />
              </Box>
              <Box
                sx={{ mt: "2rem", display: "flex", justifyContent: "center" }}
              >
                <ButtonConnect title="Submit" btnType="submit" />
              </Box>
            </form>
          </Box>
          {/* </Container> */}
        </Container>
      </MainLayout>
    </>
  );
};

export default CreateOng;
